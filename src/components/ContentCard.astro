---
interface Props {
  title: string;
  description: string;
  url: string;
  badge?: string;
  featured?: boolean;
  linkText?: string;
  target?: string;
  rel?: string;
  variant?: 'default' | 'blog';
  tags?: string[];
  readingTime?: string;
}

var {
  title,
  description,
  url,
  badge,
  featured = false,
  linkText,
  target = "",
  rel = "",
  variant = 'default',
  tags = [],
  readingTime,
} = Astro.props;
---

<div class={`content-card ${featured ? "content-featured" : ""} ${variant === 'blog' ? 'content-blog' : ''}`}>
  {variant === 'blog' && tags.length > 0 && (
    <div class="card-tags">
      {tags.slice(0, 3).map(function mapTag(tag) {
        return <span class="card-tag">{tag}</span>;
      })}
    </div>
  )}

  <h3 class="content-title">{title}</h3>
  <p class="content-description">{description}</p>

  <div class="content-footer">
    <a href={url} target={target} rel={rel} class="content-link">
      {linkText || "Learn More"}
      <svg
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
      >
        <line x1="5" y1="12" x2="19" y2="12"></line>
        <polyline points="12 5 19 12 12 19"></polyline>
      </svg>
    </a>
    <div class="footer-meta">
      {readingTime && variant === 'blog' && (
        <span class="reading-time">{readingTime}</span>
      )}
      {badge && <span class="content-badge">{badge}</span>}
    </div>
  </div>
</div>

<style scoped>
  .content-card {
    position: relative;
    padding: var(--space-lg);
    background: var(--color-bg-card);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    transition: all var(--transition-base);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .content-card:hover {
    border-color: var(--color-text-dim);
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
  }

  .content-featured {
    background: linear-gradient(
      135deg,
      rgba(59, 130, 246, 0.1) 0%,
      rgba(0, 0, 0, 0) 100%
    );
    border-color: var(--color-accent);
  }

  .content-featured:hover {
    border-color: var(--color-accent-light);
    box-shadow: 0 20px 40px rgba(59, 130, 246, 0.3);
  }

  .content-blog {
    background: linear-gradient(135deg, var(--color-bg-card) 0%, rgba(26, 26, 26, 0.5) 100%);
    transition: all var(--transition-base), background 0.5s ease;
  }

  .content-blog:hover {
    background: linear-gradient(135deg, var(--color-bg-elevated) 0%, var(--color-bg-card) 100%);
  }

  .card-tags {
    display: flex;
    gap: var(--space-xs);
    margin-bottom: var(--space-md);
    flex-wrap: wrap;
  }

  .card-tag {
    padding: 0.25rem 0.625rem;
    font-size: 0.6875rem;
    font-weight: 600;
    background: rgba(59, 130, 246, 0.1);
    color: var(--color-accent-light);
    border: 1px solid rgba(59, 130, 246, 0.2);
    border-radius: var(--border-radius-sm);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: all var(--transition-fast);
  }

  .content-blog:hover .card-tag {
    background: rgba(59, 130, 246, 0.15);
    border-color: rgba(59, 130, 246, 0.3);
  }

  .content-badge {
    padding: 0.375rem 0.875rem;
    font-size: 0.6875rem;
    font-weight: 600;
    background: var(--color-success);
    color: white;
    border: none;
    border-radius: var(--border-radius-sm);
    text-transform: uppercase;
    letter-spacing: 0.075em;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    white-space: nowrap;
  }

  .content-featured .content-badge {
    background: var(--color-accent);
  }

  .content-title {
    font-size: 1.5rem;
    margin-bottom: var(--space-sm);
    color: var(--color-text);
  }

  .content-blog .content-title {
    font-size: 1.375rem;
    line-height: 1.3;
    margin-bottom: var(--space-md);
    background: linear-gradient(135deg, var(--color-text) 0%, var(--color-text-muted) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    transition: all var(--transition-base);
  }

  .content-blog:hover .content-title {
    background: linear-gradient(135deg, var(--color-accent-light) 0%, var(--color-text) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .content-description {
    color: var(--color-text-muted);
    font-size: 1rem;
    margin-bottom: var(--space-md);
    flex-grow: 1;
  }

  .content-blog .content-description {
    font-size: 0.9375rem;
    line-height: 1.6;
    color: var(--color-text-dim);
  }

  .content-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--space-md);
    flex-wrap: wrap;
    margin-top: auto;
  }

  .footer-meta {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    flex-wrap: wrap;
  }

  .reading-time {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.25rem 0.625rem;
    font-size: 0.75rem;
    color: var(--color-text-dim);
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-sm);
    white-space: nowrap;
  }

  .reading-time::before {
    content: "ðŸ“–";
    font-size: 0.875rem;
  }

  .content-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-accent-light);
    font-weight: 500;
    transition: all var(--transition-fast);
  }

  .content-link:hover {
    color: var(--color-accent);
    gap: 0.75rem;
  }

  .content-link svg {
    transition: transform var(--transition-fast);
  }

  .content-link:hover svg {
    transform: translateX(4px);
  }

  @media (max-width: 768px) {
    .content-blog .content-title {
      font-size: 1.25rem;
    }

    .card-tags {
      margin-bottom: var(--space-sm);
    }

    .footer-meta {
      width: 100%;
      justify-content: space-between;
    }
  }
</style>
