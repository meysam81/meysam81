---
interface Props {
  variant?: 'hero' | 'section';
}

var { variant = 'section' } = Astro.props;
---

<div class:list={['newsletter', `newsletter-${variant}`]}>
  {variant === 'section' && (
    <h2>Build Alongside Me</h2>
    <p class="newsletter-description">
      Join technical founders getting weekly insights on customer discovery, product validation, and building with production-grade discipline.
    </p>
  )}

  <div class="newsletter-benefits">
    <div class="benefit">
      <svg class="benefit-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
        <polyline points="22 4 12 14.01 9 11.01"></polyline>
      </svg>
      <span>Customer discovery insights as I interview potential users</span>
    </div>
    <div class="benefit">
      <svg class="benefit-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
        <polyline points="22 4 12 14.01 9 11.01"></polyline>
      </svg>
      <span>Production DevOps lessons applied to product development</span>
    </div>
    <div class="benefit">
      <svg class="benefit-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
        <polyline points="22 4 12 14.01 9 11.01"></polyline>
      </svg>
      <span>Honest updatesâ€”experiments, failures, and what I'm learning</span>
    </div>
    <div class="benefit">
      <svg class="benefit-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
        <polyline points="22 4 12 14.01 9 11.01"></polyline>
      </svg>
      <span>Early access to new tools and experiments</span>
    </div>
  </div>

  <form
    class="newsletter-form listmonk-form"
    data-pirsch-event="subscribe"
    data-pirsch-meta-page_url={Astro.url.pathname}
    data-pirsch-meta-variant={variant}
    data-pirsch-non-interactive
    action="https://newsletter.meysam.io/subscription/form"
    method="post"
    >
    <input type="hidden" name="nonce" />
    <input type="hidden" name="l" value="00a2c2b8-467a-4d74-9c76-9c6472c91d06" />

    <div class="form-group">
      <input
        type="email"
        name="email"
        placeholder="your@email.com"
        required
        aria-label="Email address"
        class="email-input"
      />
      <input
        type="text"
        name="name"
        placeholder="Name"
        aria-label="Name"
        class="name-input"
      />
    </div>

    <altcha-widget
      class="altcha-widget"
      challengeurl="https://newsletter.meysam.io/api/public/captcha/altcha"
      auto="onfocus"
    ></altcha-widget>
    <script type="module" src="https://newsletter.meysam.io/public/static/altcha.umd.js" async defer></script>

    <button type="submit" class="btn btn-primary submit-button">
      <span class="button-text">Join 1,500+ Engineers</span>
      <span class="button-loader hidden">
        <svg class="spinner" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M21 12a9 9 0 1 1-6.219-8.56"></path>
        </svg>
        Subscribing...
      </span>
    </button>

    <p class="form-note">No spam. Unsubscribe anytime. Privacy respected.</p>
  </form>

  <div class="success-message hidden">
    <div class="success-icon">
      <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
        <polyline points="22 4 12 14.01 9 11.01"></polyline>
      </svg>
    </div>
    <h3 class="success-title">Check Your Email!</h3>
    <p class="success-description">
      We've sent a confirmation link to your inbox. Click it to complete your subscription and start receiving weekly insights.
    </p>
    <p class="success-note">
      Don't see it? Check your spam folder or <a href="#" class="resend-link">click here to resend</a>.
    </p>
  </div>
</div>

<script>
  import log from 'loglevel';
  import { getScrollPercentage, updateScrollPercentage, subscribe } from '@/stores/scrollStore';

  function updateFormScroll() {
    var scrollPercentage = getScrollPercentage();
    var forms = document.querySelectorAll('.newsletter-form');
    forms.forEach(function handleForm(form) {
      form.setAttribute('data-pirsch-meta-scroll', String(scrollPercentage));
    });
  }

  function handleScroll() {
    updateScrollPercentage();
    updateFormScroll();
  }

  function showSuccessMessage(formElement) {
    var container = formElement.parentElement;
    var successMessage = container.querySelector('.success-message');

    formElement.classList.add('hidden');
    successMessage.classList.remove('hidden');
    successMessage.classList.add('fade-in');
  }

  function resetAltcha() {
    var altchaWidget = document.querySelector('altcha-widget');
    if (altchaWidget && typeof altchaWidget.reset === 'function') {
      altchaWidget.reset();
    }
  }

  function handleReset() {
    var resendLink = document.querySelector('.resend-link');
    resendLink.addEventListener('click', function handleResend(e) {
      e.preventDefault();
      var formElement = document.querySelector('.newsletter-form');
      var successMessage = document.querySelector('.success-message');
      resetFormAndScrollTo(formElement, successMessage);
      resetAltcha();
    });
  }

  function resetFormAndScrollTo(formElement, successMessage) {
    successMessage.classList.add('hidden');
    successMessage.classList.remove('fade-in');

    formElement.classList.remove('hidden');
    formElement.reset();

    var submitButton = formElement.querySelector('.submit-button');
    var buttonText = submitButton.querySelector('.button-text');
    var buttonLoader = submitButton.querySelector('.button-loader');

    submitButton.disabled = false;
    buttonText.classList.remove('hidden');
    buttonLoader.classList.add('hidden');

    var existingError = formElement.querySelector('.error-message');
    if (existingError) {
      existingError.remove();
    }

    formElement.scrollIntoView({ behavior: 'smooth', block: 'center' });

    setTimeout(function focusEmail() {
      var emailInput = formElement.querySelector('.email-input');
      if (emailInput) {
        emailInput.focus();
      }
    }, 500);
  }

  function showErrorMessage(formElement, message) {
    var existingError = formElement.querySelector('.error-message');
    if (existingError) {
      existingError.remove();
    }

    var errorDiv = document.createElement('div');
    errorDiv.className = 'error-message';
    errorDiv.textContent = message || 'Something went wrong. Please try again.';

    var submitButton = formElement.querySelector('.submit-button');
    formElement.insertBefore(errorDiv, submitButton);

    setTimeout(function removeError() {
      errorDiv.remove();
    }, 5000);
  }

  function handleFormSubmit(event) {
    event.preventDefault();

    var form = event.target;
    var submitButton = form.querySelector('.submit-button');
    var buttonText = submitButton.querySelector('.button-text');
    var buttonLoader = submitButton.querySelector('.button-loader');

    submitButton.disabled = true;
    buttonText.classList.add('hidden');
    buttonLoader.classList.remove('hidden');

    updateFormScroll();

    var formData = new FormData(form);

    fetch(form.action, {
      method: 'POST',
      body: formData,
    })
      .then(function handleResponse(response) {
        if (response.ok) {
          return response;
        }
        throw new Error('Subscription failed');
      })
      .then(function onSuccess() {
        log.info('Subscription successful');
        showSuccessMessage(form);
      })
      .catch(function onError(error) {
        log.error('Subscription error:', error);
        showErrorMessage(form, 'Unable to subscribe. Please try again.');
        submitButton.disabled = false;
        buttonText.classList.remove('hidden');
        buttonLoader.classList.add('hidden');
      });
  }

  document.addEventListener('DOMContentLoaded', function initialize() {
    updateScrollPercentage();
    updateFormScroll();
    handleReset();

    subscribe(function onScrollChange(percentage) {
      log.debug('Scroll percentage changed to', percentage);
    });

    window.addEventListener('scroll', handleScroll);

    var forms = document.querySelectorAll('.newsletter-form');
    forms.forEach(function attachSubmitHandler(form) {
      form.addEventListener('submit', handleFormSubmit);
    });
  });
</script>

<style scoped>
  .newsletter {
    padding: var(--space-2xl);
    background: var(--color-bg-card);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
  }

  .newsletter-hero {
    text-align: center;
    margin-top: var(--space-xl);
  }

  .newsletter-section {
    max-width: 800px;
    margin: 0 auto;
  }

  .newsletter-section h2 {
    text-align: center;
    margin-bottom: var(--space-md);
  }

  .newsletter-description {
    text-align: center;
    font-size: 1.125rem;
    color: var(--color-text-muted);
    margin-bottom: var(--space-xl);
  }

  .newsletter-benefits {
    display: grid;
    gap: var(--space-md);
    margin-bottom: var(--space-xl);
  }

  .benefit {
    display: flex;
    align-items: flex-start;
    gap: var(--space-sm);
  }

  .benefit-icon {
    flex-shrink: 0;
    color: var(--color-success);
    margin-top: 2px;
  }

  .benefit span {
    color: var(--color-text-muted);
    font-size: 1rem;
    line-height: 1.6;
  }

  .newsletter-form {
    max-width: 600px;
    margin: 0 auto;
  }

  .altcha-widget {
    display: none;
    margin-bottom: var(--space-md);
  }

  .form-group {
    display: flex;
    gap: var(--space-sm);
    margin-bottom: var(--space-md);
  }

  .email-input {
    flex: 1;
    font-size: 1rem;
  }

  .name-input {
    flex: 1;
    font-size: 1rem;
  }

  .submit-button {
    white-space: nowrap;
    width: 100%;
    margin-bottom: var(--space-sm);
    position: relative;
    min-height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .button-text,
  .button-loader {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-xs);
  }

  .button-loader {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
    height: fit-content;
  }

  .spinner {
    animation: spin 0.8s linear infinite;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  .form-note {
    text-align: center;
    font-size: 0.875rem;
    color: var(--color-text-dim);
    margin: 0;
  }

  .success-message {
    max-width: 600px;
    margin: 0 auto;
    text-align: center;
    padding: var(--space-xl);
  }

  .success-icon {
    width: 64px;
    height: 64px;
    margin: 0 auto var(--space-md);
    color: var(--color-success);
  }

  .success-icon svg {
    width: 100%;
    height: 100%;
  }

  .success-title {
    font-size: 1.75rem;
    font-weight: 600;
    color: var(--color-text);
    margin-bottom: var(--space-sm);
  }

  .success-description {
    font-size: 1.125rem;
    color: var(--color-text-muted);
    margin-bottom: var(--space-md);
    line-height: 1.6;
  }

  .success-note {
    font-size: 0.875rem;
    color: var(--color-text-dim);
    margin: 0;
  }

  .resend-link {
    color: var(--color-accent-light);
    text-decoration: underline;
    cursor: pointer;
  }

  .resend-link:hover {
    color: var(--color-accent);
  }

  .error-message {
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.3);
    color: #fca5a5;
    padding: var(--space-sm);
    border-radius: var(--border-radius-sm);
    margin-bottom: var(--space-md);
    text-align: center;
    font-size: 0.875rem;
  }

  .hidden {
    display: none;
  }

  @media (max-width: 768px) {
    .newsletter {
      padding: var(--space-lg);
    }

    .form-group {
      flex-direction: column;
    }

    .submit-button {
      width: 100%;
    }

    .success-message {
      padding: var(--space-lg);
    }

    .success-title {
      font-size: 1.5rem;
    }

    .success-description {
      font-size: 1rem;
    }
  }
</style>
