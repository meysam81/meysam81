---
import { getCollection, type CollectionEntry } from 'astro:content';
import BlogPostLayout from '@/layouts/BlogPostLayout.astro';
import { calculateReadingTime } from '@/utils/reading-time';
import { filterPublishedPosts } from '@/utils/blog';
import { getBlogPostViews } from '@/utils/pirsch';
import log from 'loglevel';

export async function getStaticPaths() {
  var posts = await getCollection('blog');
  var publishedPosts = filterPublishedPosts(posts);
  return publishedPosts.map(function mapPosts(post) {
    return {
      params: { slug: post.slug },
      props: post,
    };
  });
}

type Props = CollectionEntry<'blog'>;

var post = Astro.props;
var { Content, headings } = await post.render();
var readingTime = calculateReadingTime(post.body);

var pageViews = 0;
var hostname = import.meta.env.PIRSCH_HOSTNAME || "meysam.io";
var postPath = `~/blog/${post.slug}`;
pageViews = await getBlogPostViews(hostname, postPath);
log.debug(`Page views for ${postPath}: ${pageViews}`);
---

<BlogPostLayout
  title={post.data.title}
  description={post.data.description}
  pubDate={post.data.pubDate}
  updatedDate={post.data.updatedDate}
  author={post.data.author}
  tags={post.data.tags}
  ogImage={post.data.ogImage}
  headings={headings}
  readingTime={readingTime}
  references={post.data.references}
  pageViews={pageViews}
>
  <Content />
</BlogPostLayout>
